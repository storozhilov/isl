import os

env = Environment(
CCFLAGS = ['-g', '-Wall'],
CPPPATH = '../include'
)
env.Append(ENV = {'PATH' : os.environ['PATH']})
if GetOption('core-debugging') or os.environ.get('ISL_CORE_DEBUGGING', '').upper() == 'YES':
	env.Append(CCFLAGS = '-DISL_CORE_DEBUGGING')
if GetOption('log-debugging') or os.environ.get('ISL_LOG_DEBUGGING', '').upper() == 'YES':
	env.Append(CCFLAGS = '-DISL_LOG_DEBUGGING')

# Build section
staticLibraryBuilder = env.StaticLibrary('../lib/isl', Glob('*.cxx'))
sharedLibraryBuilder = env.SharedLibrary('../lib/isl', Glob('*.cxx'))
Default([staticLibraryBuilder, sharedLibraryBuilder])

# Install section
prefix = GetOption('prefix')
if prefix is None:
	prefix = '/usr/local'
libraryInstaller = env.Install(os.path.join(prefix, 'lib'), [staticLibraryBuilder, sharedLibraryBuilder])
headersInstaller = env.Install(os.path.join(prefix, 'include/isl'), Glob('../include/isl/*.hxx'))
env.Alias('install', [libraryInstaller, headersInstaller])
